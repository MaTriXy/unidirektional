apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    def config = rootProject.extensions.getByName("ext")

    compileSdkVersion config["compile_sdk"]

    defaultConfig {
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    dependencies {
        def applicationDependencies = rootProject.ext.mainApplication
        def unitTestDependencies = rootProject.ext.unitTesting

        //Library dependencies
        implementation applicationDependencies.coroutines
        implementation applicationDependencies.coroutinesAndroid
        implementation applicationDependencies.archComponents
        implementation applicationDependencies.archComponentsExtensions
        implementation applicationDependencies.okhttpLoggingInterceptor
        implementation applicationDependencies.retrofit
        implementation applicationDependencies.retrofitGsonConverter

        //Unit/Integration tests dependencies
        testImplementation unitTestDependencies.jUnit
        testImplementation unitTestDependencies.assertJ
        testImplementation unitTestDependencies.mockitoCore
        testImplementation unitTestDependencies.mockitoInline
        testImplementation unitTestDependencies.mockitoKotlin
        testImplementation unitTestDependencies.kluent
        testImplementation unitTestDependencies.archComponents
        testImplementation unitTestDependencies.assertK
        testImplementation unitTestDependencies.mockK
    }

}

kotlin {
    experimental {
        coroutines "enable"
    }
}
